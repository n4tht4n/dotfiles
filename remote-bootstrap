#!/usr/bin/env bash

OS="$(uname)"
USERNAME="$USER"
HOMEBREW_BIN="/opt/homebrew/bin/brew" # defaults to macOS...

echo -e "\nüöÄ Executing remote-bootstrap... dotfiles.git ‚Üí ~/.dotfiles\n" && sleep 2

#######################################################################
### check for supported system
if [[ "$OS" != "Linux" && "$OS" != "Darwin" ]]; then
  echo "üí£ Didn't find a supported system! ($OS not in [Linux, Darwin])" && exit 1
elif [[ "$OS" == "Linux" ]]; then
  [ -f /etc/os-release ] && . /etc/os-release && OS=$ID
  if [[ "$OS" != "debian" ]]; then
    echo "üí£ Didn't find a supported Linux! ($OS is not in [debian])" && exit 1
  fi
fi

if [[ "$OS" == "debian" ]]; then
  #######################################################################
  ### Linux: ensure mandatory tools
  INSTALLED_ANY_MANDATORY_TOOL=0

  # (do this 1st to have zsh as the default shell after relog üòé)
  type zsh &> /dev/null
  if [[ $? -ne 0 ]]; then
    echo "üöß Installing 'zsh' and making it the default shell!" && sleep 2
    su root -c "export PATH=/usr/sbin:$PATH;apt install zsh;chsh -s /bin/zsh $USERNAME;exit 0"
    INSTALLED_ANY_MANDATORY_TOOL=1
  fi
  type curl &> /dev/null
  if [[ $? -ne 0 ]]; then
    echo "üöß Installing 'curl'!" && sleep 2
    su root -c "export PATH=/usr/sbin:$PATH;apt install curl;exit 0"
    INSTALLED_ANY_MANDATORY_TOOL=1
  fi

  type sudo &> /dev/null
  if [[ $? -ne 0 ]]; then
    echo "üöß Installing missing 'sudo'!" && sleep 2
    su root -c "export PATH=/usr/sbin:$PATH;apt install sudo;usermod -aG sudo $USERNAME;exit 0"
    INSTALLED_ANY_MANDATORY_TOOL=1
  fi

  if [[ $INSTALLED_ANY_MANDATORY_TOOL -ne 0 ]]; then
    echo "üí£ Please relog the shell to finish madantory tools setup! Then rerun this script again!" && exit 0
  fi

  # and Nix itself
  curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install

  # make Nix directly usable!
  . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh

  # install the first mandatory Nix packages before proceeding
  nix profile install nixpkgs#{git,chezmoi}
else
  #######################################################################
  ### MacOS: ensure mandatory tool(s)
  git -h &> /dev/null
  if [[ $? -ne 0 ]]; then
    echo "üöß Please install dev tools first (that popped up)! Then rerun this script again!" && exit 0
  fi

  #######################################################################
  ### install homebrew itself
  $HOMEBREW_BIN --version &> /dev/null
  if [[ $? -ne 0 ]]; then
    echo "üç∫ Installing Homebrew..." && sleep 2
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  #######################################################################
  ### install chezmoi via homebrew to determine followup packages
  eval "$($HOMEBREW_BIN shellenv)"
  brew analytics off
  brew install chezmoi
fi

#######################################################################
### apply dotfiles using chezmoi
chezmoi init -S ~/.dotfiles --branch linux-nix --apply n4tht4n
